public int maxAreaOfIsland(int[][] grid) {
        int ans=0;
        int m=grid.length,n=grid[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    ans=Math.max(ans,bfs(i,j,grid));
                }
            }
        }
        return ans;
    }
    static int bfs(int row,int col,int[][] arr){
        int res=0;
        arr[row][col]=0;
        res++;
        Queue<int[]>q=new LinkedList<>();
        int dr[]={-1,0,1,0};
        int dc[]={0,1,0,-1};
        q.add(new int[]{row,col});
        while(!q.isEmpty()){
            int temp[]=q.poll();
            for(int i=0;i<4;i++){
                int cr=dr[i]+temp[0];
                int cc=dc[i]+temp[1];
                if(cr>=0 && cr<arr.length && cc>=0 && cc<arr[0].length && arr[cr][cc]==1){
                    q.add(new int[]{cr,cc});
                    res++;
                    arr[cr][cc]=0;
                }
            }
        }
        return res;
    }Max area of Island