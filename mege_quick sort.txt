import java.util.*;
public class Main
{
	public static void main(String[] args) {
		System.out.println("Hello World");
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int arr[]=new int[n];
		for(int i=0;i<n;i++) arr[i]=sc.nextInt();
		//mergesort(arr);
		quicksort(arr,0,arr.length-1);
		System.out.println(Arrays.toString(arr));
	}
	static void mergesort(int arr[]){
	    int l=arr.length,m=l/2;
	    if(l<2) return;
	    int left[]=new int[m];
	    int right[]=new int[l-m];
	    for(int i=0;i<m;i++) left[i]=arr[i];
	    for(int i=m;i<l;i++) right[i-m]=arr[i];
	    mergesort(left);
	    mergesort(right);
	    merge(left,right,arr);
	}
	static void merge(int[] left,int[] right,int[] arr){
	    int i=0,j=0,k=0,l1=left.length,l2=right.length;
	    while(i<l1 && j<l2){
	        if(left[i]<right[j]) arr[k++]=left[i++];
	        else arr[k++]=right[j++];
	    }
	    while(i<l1) arr[k++]=left[i++];
	    while(j<l2) arr[k++]=right[j++];
	}
	static void quicksort(int arr[],int st,int end){
	    if(st>=end) return;
	    int p=partition(arr,st,end);
	    quicksort(arr,st,p-1);
	    quicksort(arr,p+1,end);
	}
	static int partition(int arr[],int st,int end){
	    int l=arr.length;
	    int pivot=arr[end];
	    int pivotind=st;
	    for(int i=st;i<end;i++){
	        if(arr[i]<=pivot){
	            swap(i,pivotind,arr);
	            pivotind++;
	        }
	    }
	    swap(pivotind,end,arr);
	    return pivotind;
	}
	static void swap(int a,int b,int arr[]){
	    int temp=arr[a];
	    arr[a]=arr[b];
	    arr[b]=temp;
	}
}
